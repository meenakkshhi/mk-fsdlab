/.voting.js
import React, { useState } from 'react';
const App = () => {
const [count, setCount] = useState(0);
const [submittedCount, setSubmittedCount] = useState(null);
const handleIncrement = () => {
setCount(count + 1);
};
const handleDecrement = () => {
setCount(count - 1);
};
const handleSubmit = () => {
setSubmittedCount(count);
};
return (
<div style={{ padding: '20px' }}>
<h1>Voting System</h1>
<div>
<button onClick={handleIncrement}>Increment</button>
<button onClick={handleDecrement}>Decrement</button>
</div>
<h2>Current Count: {count}</h2>
<button onClick={handleSubmit}>Submit</button>
{submittedCount !== null && (
<h2>Total Votes Submitted: {submittedCount}</h2>
)}
</div>
);
};
export default App;
/app.js
import React from 'react';
import Voting from './voting';
const App = () => {
return (
<div>
<h1>Simple Voting Application</h1>
<Voting />
</div>
);
};
export default App;



./index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
<React.StrictMode>
<App />
</React.StrictMode>
);
// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
